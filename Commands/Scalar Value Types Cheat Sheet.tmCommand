<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/bin/bash
[[ -f "${TM_SUPPORT_PATH}/lib/bash_init.sh" ]] &amp;&amp; . "${TM_SUPPORT_PATH}/lib/bash_init.sh"

. "$TM_SUPPORT_PATH/lib/webpreview.sh"
html_header "Scalar Value Types" "proto3"
Markdown.pl &lt;&lt;'EOF'

&lt;title&gt;Scalar Value Types (proto3)&lt;/title&gt;

&lt;table width="100%" border="1"&gt;
&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;.proto Type&lt;/th&gt;&lt;th&gt;Notes&lt;/th&gt;&lt;th&gt;C++ Type&lt;/th&gt;&lt;th&gt;Java Type&lt;/th&gt;&lt;th&gt;Python Type&lt;sup&gt;[2]&lt;/sup&gt;&lt;/th&gt;&lt;th&gt;Go Type&lt;/th&gt;&lt;th&gt;Ruby Type&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;double&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;double&lt;/td&gt;&lt;td&gt;double&lt;/td&gt;&lt;td&gt;float&lt;/td&gt;&lt;td&gt;float64&lt;/td&gt;&lt;td&gt;Float&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;float&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;float&lt;/td&gt;&lt;td&gt;float&lt;/td&gt;&lt;td&gt;float&lt;/td&gt;&lt;td&gt;float32&lt;/td&gt;&lt;td&gt;Float&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;int32&lt;/td&gt;&lt;td&gt;Uses variable-length encoding. Inefficient for encoding negative numbers â€“ if your field is likely to have negative values, use sint32 instead.&lt;/td&gt;&lt;td&gt;int32&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;int32&lt;/td&gt;&lt;td&gt;Fixnum or Bignum (as required)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;int64&lt;/td&gt;&lt;td&gt;Uses variable-length encoding. Inefficient for encoding negative numbers â€“ if your field is likely to have negative values, use sint64 instead.&lt;/td&gt;&lt;td&gt;int64&lt;/td&gt;&lt;td&gt;long&lt;/td&gt;&lt;td&gt;int/long&lt;sup&gt;[3]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;int64&lt;/td&gt;&lt;td&gt;Bignum&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;uint32&lt;/td&gt;&lt;td&gt;Uses variable-length encoding.&lt;/td&gt;&lt;td&gt;uint32&lt;/td&gt;&lt;td&gt;int&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;int/long&lt;sup&gt;[3]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;uint32&lt;/td&gt;&lt;td&gt;Fixnum or Bignum (as required)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;uint64&lt;/td&gt;&lt;td&gt;Uses variable-length encoding.&lt;/td&gt;&lt;td&gt;uint64&lt;/td&gt;&lt;td&gt;long&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;int/long&lt;sup&gt;[3]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;uint64&lt;/td&gt;&lt;td&gt;Bignum&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sint32&lt;/td&gt;&lt;td&gt;Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.&lt;/td&gt;&lt;td&gt;int32&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;int32&lt;/td&gt;&lt;td&gt;Fixnum or Bignum (as required)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sint64&lt;/td&gt;&lt;td&gt;Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.&lt;/td&gt;&lt;td&gt;int64&lt;/td&gt;&lt;td&gt;long&lt;/td&gt;&lt;td&gt;int/long&lt;sup&gt;[3]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;int64&lt;/td&gt;&lt;td&gt;Bignum&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;fixed32&lt;/td&gt;&lt;td&gt;Always four bytes. More efficient than uint32 if values are often greater than 2&lt;sup&gt;28&lt;/sup&gt;.&lt;/td&gt;&lt;td&gt;uint32&lt;/td&gt;&lt;td&gt;int&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;uint32&lt;/td&gt;&lt;td&gt;Fixnum or Bignum (as required)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;fixed64&lt;/td&gt;&lt;td&gt;Always eight bytes. More efficient than uint64 if values are often greater than 2&lt;sup&gt;56&lt;/sup&gt;.&lt;/td&gt;&lt;td&gt;uint64&lt;/td&gt;&lt;td&gt;long&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;int/long&lt;sup&gt;[3]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;uint64&lt;/td&gt;&lt;td&gt;Bignum&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sfixed32&lt;/td&gt;&lt;td&gt;Always four bytes.&lt;/td&gt;&lt;td&gt;int32&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;td&gt;int32&lt;/td&gt;&lt;td&gt;Fixnum or Bignum (as required)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;sfixed64&lt;/td&gt;&lt;td&gt;Always eight bytes.&lt;/td&gt;&lt;td&gt;int64&lt;/td&gt;&lt;td&gt;long&lt;/td&gt;&lt;td&gt;int/long&lt;sup&gt;[3]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;int64&lt;/td&gt;&lt;td&gt;Bignum&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;bool&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;bool&lt;/td&gt;&lt;td&gt;boolean&lt;/td&gt;&lt;td&gt;boolean&lt;/td&gt;&lt;td&gt;bool&lt;/td&gt;&lt;td&gt;TrueClass/FalseClass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;string&lt;/td&gt;&lt;td&gt;A string must always contain UTF-8 encoded or 7-bit ASCII text.&lt;/td&gt;&lt;td&gt;string&lt;/td&gt;&lt;td&gt;String&lt;/td&gt;&lt;td&gt;str/unicode&lt;sup&gt;[4]&lt;/sup&gt;&lt;/td&gt;&lt;td&gt;string&lt;/td&gt;&lt;td&gt;String (UTF-8)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;bytes&lt;/td&gt;&lt;td&gt;May contain any arbitrary sequence of bytes.&lt;/td&gt;&lt;td&gt;string&lt;/td&gt;&lt;td&gt;ByteString&lt;/td&gt;&lt;td&gt;str&lt;/td&gt;&lt;td&gt;[]byte&lt;/td&gt;&lt;td&gt;String (ASCII-8BIT)&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
EOF
html_footer
</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^h</string>
	<key>name</key>
	<string>Scalar Value Types Cheat Sheet</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>uuid</key>
	<string>7E5CF1B7-D3DD-4D8D-9E14-893A73A0CF3C</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
